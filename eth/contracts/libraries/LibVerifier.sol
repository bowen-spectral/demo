//
// Copyright 2017 Christian Reitwiessner
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// 2019 OKIMS
//      ported to solidity 0.6
//      fixed linter warnings
//      added requiere error messages
//
//
// SPDX-License-Identifier: GPL-3.0
pragma solidity ^0.6.11;
library Pairing {
    struct G1Point {
        uint X;
        uint Y;
    }
    // Encoding of field elements is: X[0] * z + X[1]
    struct G2Point {
        uint[2] X;
        uint[2] Y;
    }
    /// @return the generator of G1
    function P1() internal pure returns (G1Point memory) {
        return G1Point(1, 2);
    }
    /// @return the generator of G2
    function P2() internal pure returns (G2Point memory) {
        // Original code point
        return G2Point(
            [11559732032986387107991004021392285783925812861821192530917403151452391805634,
             10857046999023057135944570762232829481370756359578518086990519993285655852781],
            [4082367875863433681332203403145435568316851327593401208105741076214120093531,
             8495653923123431417604973247489272438418190587263600148770280649306958101930]
        );

/*
        // Changed by Jordi point
        return G2Point(
            [10857046999023057135944570762232829481370756359578518086990519993285655852781,
             11559732032986387107991004021392285783925812861821192530917403151452391805634],
            [8495653923123431417604973247489272438418190587263600148770280649306958101930,
             4082367875863433681332203403145435568316851327593401208105741076214120093531]
        );
*/
    }
    /// @return r the negation of p, i.e. p.addition(p.negate()) should be zero.
    function negate(G1Point memory p) internal pure returns (G1Point memory r) {
        // The prime q in the base field F_q for G1
        uint q = 21888242871839275222246405745257275088696311157297823662689037894645226208583;
        if (p.X == 0 && p.Y == 0)
            return G1Point(0, 0);
        return G1Point(p.X, q - (p.Y % q));
    }
    /// @return r the sum of two points of G1
    function addition(G1Point memory p1, G1Point memory p2) internal view returns (G1Point memory r) {
        uint[4] memory input;
        input[0] = p1.X;
        input[1] = p1.Y;
        input[2] = p2.X;
        input[3] = p2.Y;
        bool success;
        // solium-disable-next-line security/no-inline-assembly
        assembly {
            success := staticcall(sub(gas(), 2000), 6, input, 0xc0, r, 0x60)
            // Use "invalid" to make gas estimation work
            switch success case 0 { invalid() }
        }
        require(success,"pairing-add-failed");
    }
    /// @return r the product of a point on G1 and a scalar, i.e.
    /// p == p.scalar_mul(1) and p.addition(p) == p.scalar_mul(2) for all points p.
    function scalar_mul(G1Point memory p, uint s) internal view returns (G1Point memory r) {
        uint[3] memory input;
        input[0] = p.X;
        input[1] = p.Y;
        input[2] = s;
        bool success;
        // solium-disable-next-line security/no-inline-assembly
        assembly {
            success := staticcall(sub(gas(), 2000), 7, input, 0x80, r, 0x60)
            // Use "invalid" to make gas estimation work
            switch success case 0 { invalid() }
        }
        require (success,"pairing-mul-failed");
    }
    /// @return the result of computing the pairing check
    /// e(p1[0], p2[0]) *  .... * e(p1[n], p2[n]) == 1
    /// For example pairing([P1(), P1().negate()], [P2(), P2()]) should
    /// return true.
    function pairing(G1Point[] memory p1, G2Point[] memory p2) internal view returns (bool) {
        require(p1.length == p2.length,"pairing-lengths-failed");
        uint elements = p1.length;
        uint inputSize = elements * 6;
        uint[] memory input = new uint[](inputSize);
        for (uint i = 0; i < elements; i++)
        {
            input[i * 6 + 0] = p1[i].X;
            input[i * 6 + 1] = p1[i].Y;
            input[i * 6 + 2] = p2[i].X[0];
            input[i * 6 + 3] = p2[i].X[1];
            input[i * 6 + 4] = p2[i].Y[0];
            input[i * 6 + 5] = p2[i].Y[1];
        }
        uint[1] memory out;
        bool success;
        // solium-disable-next-line security/no-inline-assembly
        assembly {
            success := staticcall(sub(gas(), 2000), 8, add(input, 0x20), mul(inputSize, 0x20), out, 0x20)
            // Use "invalid" to make gas estimation work
            switch success case 0 { invalid() }
        }
        require(success,"pairing-opcode-failed");
        return out[0] != 0;
    }
    /// Convenience method for a pairing check for two pairs.
    function pairingProd2(G1Point memory a1, G2Point memory a2, G1Point memory b1, G2Point memory b2) internal view returns (bool) {
        G1Point[] memory p1 = new G1Point[](2);
        G2Point[] memory p2 = new G2Point[](2);
        p1[0] = a1;
        p1[1] = b1;
        p2[0] = a2;
        p2[1] = b2;
        return pairing(p1, p2);
    }
    /// Convenience method for a pairing check for three pairs.
    function pairingProd3(
            G1Point memory a1, G2Point memory a2,
            G1Point memory b1, G2Point memory b2,
            G1Point memory c1, G2Point memory c2
    ) internal view returns (bool) {
        G1Point[] memory p1 = new G1Point[](3);
        G2Point[] memory p2 = new G2Point[](3);
        p1[0] = a1;
        p1[1] = b1;
        p1[2] = c1;
        p2[0] = a2;
        p2[1] = b2;
        p2[2] = c2;
        return pairing(p1, p2);
    }
    /// Convenience method for a pairing check for four pairs.
    function pairingProd4(
            G1Point memory a1, G2Point memory a2,
            G1Point memory b1, G2Point memory b2,
            G1Point memory c1, G2Point memory c2,
            G1Point memory d1, G2Point memory d2
    ) internal view returns (bool) {
        G1Point[] memory p1 = new G1Point[](4);
        G2Point[] memory p2 = new G2Point[](4);
        p1[0] = a1;
        p1[1] = b1;
        p1[2] = c1;
        p1[3] = d1;
        p2[0] = a2;
        p2[1] = b2;
        p2[2] = c2;
        p2[3] = d2;
        return pairing(p1, p2);
    }
}
contract Verifier {
    using Pairing for *;
    struct VerifyingKey {
        Pairing.G1Point alfa1;
        Pairing.G2Point beta2;
        Pairing.G2Point gamma2;
        Pairing.G2Point delta2;
        Pairing.G1Point[] IC;
    }
    struct Proof {
        Pairing.G1Point A;
        Pairing.G2Point B;
        Pairing.G1Point C;
    }
    function verifyingKey() internal pure returns (VerifyingKey memory vk) {
        vk.alfa1 = Pairing.G1Point(
            20491192805390485299153009773594534940189261866228447918068658471970481763042,
            9383485363053290200918347156157836566562967994039712273449902621266178545958
        );

        vk.beta2 = Pairing.G2Point(
            [4252822878758300859123897981450591353533073413197771768651442665752259397132,
             6375614351688725206403948262868962793625744043794305715222011528459656738731],
            [21847035105528745403288232691147584728191162732299865338377159692350059136679,
             10505242626370262277552901082094356697409835680220590971873171140371331206856]
        );
        vk.gamma2 = Pairing.G2Point(
            [11559732032986387107991004021392285783925812861821192530917403151452391805634,
             10857046999023057135944570762232829481370756359578518086990519993285655852781],
            [4082367875863433681332203403145435568316851327593401208105741076214120093531,
             8495653923123431417604973247489272438418190587263600148770280649306958101930]
        );
        vk.delta2 = Pairing.G2Point(
            [11590105646643767837685119966485572933521682132112114943956795300659582323799,
             7727491904818356003590531629336503343747895556456567647568431393248765068628],
            [21753377646672286690906440413042332035938099441195482697803811444782060063668,
             11896634515435655929972052382032351271314242677744890268573529856979535697379]
        );
        vk.IC = new Pairing.G1Point[](132);
        
        vk.IC[0] = Pairing.G1Point( 
            18679922018019674117170814466447641865456326378525986280921829777818982066395,
            5887336916897882232778290430440119379308652717877267111952972806546703672148
        );                                      
        
        vk.IC[1] = Pairing.G1Point( 
            15289702063760212609542432893057357870602448283536064988626218962934338851947,
            4455991188117356053934013024872553105995214106480510205760054502905424405835
        );                                      
        
        vk.IC[2] = Pairing.G1Point( 
            14267396498507455609698120175250373310121406654362897536693301664099087642267,
            9488464994790173579410668521868424035049822435413863890222955328953658216624
        );                                      
        
        vk.IC[3] = Pairing.G1Point( 
            731891824048625516711481801658728854369063726232196384711413543029291369882,
            12172421078459168895672774978733515717876795025104577583570361868874015174866
        );                                      
        
        vk.IC[4] = Pairing.G1Point( 
            20564565436466193074961529719918587879786191449636968044932065887198952047162,
            5655865782740273594292771934802908831122716839228627056793128734268408026526
        );                                      
        
        vk.IC[5] = Pairing.G1Point( 
            18627853945452973801187228296833744605609448172897121645937964684959383866274,
            15014500451289662264066230670042118495342544589005624999880653374492678766135
        );                                      
        
        vk.IC[6] = Pairing.G1Point( 
            17579027852972550444459723053498394417900842073165439475593467623116596770206,
            19990002810678347370687792925987837685296550958061787932496426978674911530628
        );                                      
        
        vk.IC[7] = Pairing.G1Point( 
            18325262233074769493494756075302015215939299603356543769200967861076785098094,
            3586958771231766408196423971184596264550959151518682061263424939225613596112
        );                                      
        
        vk.IC[8] = Pairing.G1Point( 
            1779952552312354789208176479106964066260123320392885988538785474658675795252,
            10622111370362367567271506471588696892482646349854667318298003238424816445290
        );                                      
        
        vk.IC[9] = Pairing.G1Point( 
            5068707772453061888309443392044238170304185839359367080859710662865798941034,
            21160728178816125537210236561627573171453229467743395258773047720680605703040
        );                                      
        
        vk.IC[10] = Pairing.G1Point( 
            18705686014843824973669391475476605449939100069653297938282934253419705869748,
            15335438021191531427524605787104981839511669721328448601599432482457603932365
        );                                      
        
        vk.IC[11] = Pairing.G1Point( 
            21372434648341307015584585833671505783440592310444627167717404682015295618979,
            1289832596982495794229186384112158900055611286811789259946184914758263594
        );                                      
        
        vk.IC[12] = Pairing.G1Point( 
            19097936784471099831700736743730952872292984449211733382799597751067909114464,
            10218056516022755372759891252983896840392047377025929247537482048653139730464
        );                                      
        
        vk.IC[13] = Pairing.G1Point( 
            21134225674037850008811318900880687390099943840414405687893286635086172480435,
            14960698523476139910717931622459473729744881541900583504234669565309258514844
        );                                      
        
        vk.IC[14] = Pairing.G1Point( 
            6754054827200435658448037825560187233259329446691692830677763578081134256817,
            2097272973963930973078933062702021714068460503499401440055762607568883749787
        );                                      
        
        vk.IC[15] = Pairing.G1Point( 
            11028683674263457827208569341263669582347379303924405625080156407342877453178,
            18693729422195786824002618240095182534368389656615921361447856671910338408257
        );                                      
        
        vk.IC[16] = Pairing.G1Point( 
            14863598159958583294906668921485351040744170927404968555757158104241565710247,
            17474484557582397782329140585018056909332891484472864133154400858939934337238
        );                                      
        
        vk.IC[17] = Pairing.G1Point( 
            7493265418925994309448892893807322441040721694749000966046661887873726961604,
            6047058047523323565747507549986366178655128742943784162946327942277550802875
        );                                      
        
        vk.IC[18] = Pairing.G1Point( 
            5741862710318768031288569723260671643834822393280025367476309619814620018786,
            6262118515521749046434860964584780574721237147042218565800744364360380078759
        );                                      
        
        vk.IC[19] = Pairing.G1Point( 
            17985036189075807186204382305789701921400667283872204463854488420325681045509,
            1240921366885604093408735381760720140750686481576088657914771410693087799606
        );                                      
        
        vk.IC[20] = Pairing.G1Point( 
            16543508004465354128863374239991930313349872258394954242818306594904975843672,
            11581359282350224200514413143005744596375527696653223182267696749033717779113
        );                                      
        
        vk.IC[21] = Pairing.G1Point( 
            14763451485063280398031636970296032126132396796606931767424169535521017207256,
            17660297942048161079508051041634755246459530248204310902795291256317780284649
        );                                      
        
        vk.IC[22] = Pairing.G1Point( 
            2203951547526880670626964299081245196175986429079137038679032008507785834789,
            13525719352568391489480696031274183393235395000199162010360326770438164790595
        );                                      
        
        vk.IC[23] = Pairing.G1Point( 
            12568203841408436019056827162829352986571377794296592300314114839002000533467,
            1907408388599579374369302429703928473194688209380050198380601484088217552939
        );                                      
        
        vk.IC[24] = Pairing.G1Point( 
            15605241178307782577294433172227643808807317466534281687867711807912899690156,
            7851256500691658421666483144148696321151287123560086888262025947792675403645
        );                                      
        
        vk.IC[25] = Pairing.G1Point( 
            9662451187296024142150931456388496612340174379445066295799955538984812293250,
            15317073595366829800692291817062175187093754578282206154110000041782318354389
        );                                      
        
        vk.IC[26] = Pairing.G1Point( 
            19908307326095081381503951053604337907395097119601635577511451647186267241839,
            15951503595193912296655675121899013309149937526636359185691469937714466819103
        );                                      
        
        vk.IC[27] = Pairing.G1Point( 
            21635523637472181198176715068488678745148455599276560187157409287226247818086,
            17972488030963757696914453405768129709361554512579287393405374961110531628970
        );                                      
        
        vk.IC[28] = Pairing.G1Point( 
            13917316430994184104760724780154228784334707644932914768753078469365509249039,
            15773606964596539389778992723829178878871639247226658920818922724733524362474
        );                                      
        
        vk.IC[29] = Pairing.G1Point( 
            19638939239342543856574974499532095469555149318281032963188874174164991086285,
            3029105560877170006744327538683958759656053323825852844486365527941268897433
        );                                      
        
        vk.IC[30] = Pairing.G1Point( 
            79384153572904163470420307974182356087302967393709214676136503711671347067,
            7324396929537562542767569370371761853991553722413641421414173090548932267488
        );                                      
        
        vk.IC[31] = Pairing.G1Point( 
            4527162982903998608694916667478472641722720918126947250478053362484679130933,
            17508815893044580702740624805952191502988151409446055971507090741474847255770
        );                                      
        
        vk.IC[32] = Pairing.G1Point( 
            16706685079941807547687182537955727639842120795233643364542173192927110196770,
            20617562057164429810566060735196032802730276219158311237894370736934484633685
        );                                      
        
        vk.IC[33] = Pairing.G1Point( 
            3803842784906460888638842730216869409307780399755756771641282051131153175515,
            5538011844374425527501522358858909758829630921548405986213296615134815206282
        );                                      
        
        vk.IC[34] = Pairing.G1Point( 
            13594406898888550406816470807708055311573935872011101496902629084851075682332,
            9760975838337239679352527865245422117190497434592134909351454221779405417649
        );                                      
        
        vk.IC[35] = Pairing.G1Point( 
            15208405091738255216856404968634438283133706325157796854012337934569214436836,
            7661107064316560970899976181846045496780369435607311499583689470400466525944
        );                                      
        
        vk.IC[36] = Pairing.G1Point( 
            13904122348409084708709842345962397836634405400628067572687614073849487265632,
            8134068179260854229150787986665236402021432443516685094966087902448852589319
        );                                      
        
        vk.IC[37] = Pairing.G1Point( 
            6538549449048940919893224025230099086048052697763173345516779152827953807821,
            8950103367092571108199961443105988008115223206125919551657214916940661921773
        );                                      
        
        vk.IC[38] = Pairing.G1Point( 
            13122079855795899930992294236963254550584055456934035537827985455741107111919,
            15349866512619075430985469441212467464375154934646623666997225736670028587713
        );                                      
        
        vk.IC[39] = Pairing.G1Point( 
            19607248567095445209654334203235505953660184779837761610130651296228796658654,
            3972578049962877850313402525769014621246476696317941732309035804231553085486
        );                                      
        
        vk.IC[40] = Pairing.G1Point( 
            5834397050065925581775281277342807363782365616090356531538504734295256859893,
            11177998809573994798853880848512895477116200709105647536864057986849191918693
        );                                      
        
        vk.IC[41] = Pairing.G1Point( 
            11366099721192844133303304120047986673725005138094625832956143267651866272434,
            9288560661130891685023053642298964186481583917680081703870683176460870980277
        );                                      
        
        vk.IC[42] = Pairing.G1Point( 
            14100073701617274860879167921717141367901354531572167968610462545443834724595,
            7641483382271171166103844830091853631406194009542993758225135376546070693683
        );                                      
        
        vk.IC[43] = Pairing.G1Point( 
            17951115687761950600055672946750502845209667212590477242269579994851458312165,
            14191971774393419936249869389552823817098090164363315123623072261034021386706
        );                                      
        
        vk.IC[44] = Pairing.G1Point( 
            4009153910652384657141566086022172236958401239908370346035580952995225331647,
            20541367708524913002600465394033854609276715022074277249256858647363212869480
        );                                      
        
        vk.IC[45] = Pairing.G1Point( 
            10131219457160111188474027514858042550426993843620921566267550942671769271253,
            20959794206423729774858955587701807026511417793745566753256108076345042902307
        );                                      
        
        vk.IC[46] = Pairing.G1Point( 
            19859149799025731315240479675192585142920150005066015180671559980047731868481,
            16701692019596636388460451445156388631187817585015380932778742792695681216960
        );                                      
        
        vk.IC[47] = Pairing.G1Point( 
            525286122821581433909544291116624124586482285374014592396395328832870539575,
            7467695118420956886060461338345927860588069035093444483244422733811622516893
        );                                      
        
        vk.IC[48] = Pairing.G1Point( 
            20325690456407709018114014551661315140467318317071040441660508639569600003968,
            18161548575267414609636026977843864582382154263364657543216163796944287572410
        );                                      
        
        vk.IC[49] = Pairing.G1Point( 
            18533053232106131179262070924092470559933369519645915071945585529829122711287,
            6966232868684702700985407883676412155636300120907559157444877976163724144482
        );                                      
        
        vk.IC[50] = Pairing.G1Point( 
            7967955778426005225079673803120211557311655714727704772619952960270006714716,
            14956934374704040972509545292889867584346708261203638123831844185425287120160
        );                                      
        
        vk.IC[51] = Pairing.G1Point( 
            20489059259629835176491393291471860610802355751431218392206451098877141075808,
            12476253649047067103808140137749350953638024066553835439786196253777042994706
        );                                      
        
        vk.IC[52] = Pairing.G1Point( 
            2282873503888335789886758357579112187079973517849404015811252917587507064476,
            13971274332279719548135837485639780840683145835148627963484250225605542630392
        );                                      
        
        vk.IC[53] = Pairing.G1Point( 
            18255094542333316179997937985495672453779378340140420025674925103876875562505,
            7921672056059383957012686595517784992188264350768156199349932328137601460353
        );                                      
        
        vk.IC[54] = Pairing.G1Point( 
            14429395191378501687704101017808679055725522522488400832638719280974781637011,
            6775411536325065635093764238745907601741221882325955350912019251490017353829
        );                                      
        
        vk.IC[55] = Pairing.G1Point( 
            7398961828427281191829878332972410621405345727106106590281389229217096077472,
            19890148763403478346125379611510759496797602979763293662544017513696526535757
        );                                      
        
        vk.IC[56] = Pairing.G1Point( 
            7657598223090932203634570491775070459866757203212439335397632858414321840704,
            8515298021951899931577297805424548864134299898255317190555699122543007259363
        );                                      
        
        vk.IC[57] = Pairing.G1Point( 
            4191825087515418352616574039665078935464537514106576728396935257936684763515,
            2107842677645026845491647276470269453441288630902178055148740143407826010573
        );                                      
        
        vk.IC[58] = Pairing.G1Point( 
            14526457686772549721256319133990653663882461384498776385160541709550458362197,
            6022213685087728709754604427016226703606957451654939079427195265264163944148
        );                                      
        
        vk.IC[59] = Pairing.G1Point( 
            5347864469152630512943419052501044270481995384752861427412473949873940459572,
            20840056995314711483550334789368529409973726207031646112780198265214894360911
        );                                      
        
        vk.IC[60] = Pairing.G1Point( 
            1831868285815678785838452886825971890641218029882488955252934197162628447473,
            2585650599811360672624332769091149252007129782011865020538459390064207544451
        );                                      
        
        vk.IC[61] = Pairing.G1Point( 
            15696603555544906022072808963362990652025190233488108892909517927415369385845,
            18489603089300611002280088561940225143913191577241651760897582753214310427700
        );                                      
        
        vk.IC[62] = Pairing.G1Point( 
            3301273266695890309981517865879404213422263473314020302241384155262170852838,
            11990020709683160437489962577259987485229063286129010995391972184357895558621
        );                                      
        
        vk.IC[63] = Pairing.G1Point( 
            1643788289578319588344890942667194101339888687443071197652508002614397101639,
            3747942132126334268416692352801263599632731905406242042442141051696744857147
        );                                      
        
        vk.IC[64] = Pairing.G1Point( 
            5294716794362857293973369222092814266306803414362975238057240261763857640165,
            7933689099728965888947188751116469776694622750275347085085904716585890059888
        );                                      
        
        vk.IC[65] = Pairing.G1Point( 
            18603433742104288044735500343951947741155643400845226957647750900980646959361,
            13825185555112152202163531130642135001972030945953306848328484451534412472334
        );                                      
        
        vk.IC[66] = Pairing.G1Point( 
            12335724833654937308756903366741820925938894791026555051359717389883829919384,
            21787763772002268551333274461959458122343084971607799085341077313740880957525
        );                                      
        
        vk.IC[67] = Pairing.G1Point( 
            6363429038108127524081609488201264288721008773773143573685842769487409569795,
            20441127919926844941669242405905197778752596162195354852638949987709272818217
        );                                      
        
        vk.IC[68] = Pairing.G1Point( 
            14867537978750945130781333785162191843653461520454930172896344513193173015006,
            14918994448741428187692539928547720882418678265311379091735745319598887824083
        );                                      
        
        vk.IC[69] = Pairing.G1Point( 
            13721214797612803282574032508006686759219283049934460236181074833723534144840,
            20806014219523732441681176857553387297855808423085341505766434573290647200275
        );                                      
        
        vk.IC[70] = Pairing.G1Point( 
            4378105625344733774922624756586323056974693204371314332731112396612290364983,
            7075716462559135585666310279017959428109249436171447046679150706740376689109
        );                                      
        
        vk.IC[71] = Pairing.G1Point( 
            363169549982388107859815457653285640577132843533577584143490688286564950536,
            19503421303784725623928794618158569101177899059952614391250928279990246640915
        );                                      
        
        vk.IC[72] = Pairing.G1Point( 
            9522689917250531972838628945072535643228933893535805087619907652164330185001,
            21448386326823285508484636571404711992838854195015934388970014877155200691539
        );                                      
        
        vk.IC[73] = Pairing.G1Point( 
            487307428105744516900803018372720504768689418758787505253667712334066866556,
            5484880778343911317073124024558304288232955320252912774944164645438559337646
        );                                      
        
        vk.IC[74] = Pairing.G1Point( 
            19150580094621090675798786503539665257453456201025863921058749277715336522308,
            19826612301438075141297572920130306990481943825423658476927015703620102893570
        );                                      
        
        vk.IC[75] = Pairing.G1Point( 
            2880819071008888247826799480760278309668595705633567330083687248660123017569,
            4868912421310489414806518433732373599431230871910786169856892932934853895160
        );                                      
        
        vk.IC[76] = Pairing.G1Point( 
            15830574699669347912939839693019390575823717972224585696255269163130712581067,
            7077955759619985337322720048016041253520221082098231083806560373664559950336
        );                                      
        
        vk.IC[77] = Pairing.G1Point( 
            13465103178553315496660363592803274205087760281944550626483789546627930310180,
            5726514633439573730976008012744972169389026879453276122635501600009152061872
        );                                      
        
        vk.IC[78] = Pairing.G1Point( 
            13460269789172485080976812156600518709760707905241026273582714437763896174228,
            13210405457812804543059302887466157218382438214965486167983946005501369899664
        );                                      
        
        vk.IC[79] = Pairing.G1Point( 
            1764883216551996159431027537630990413255523349189536955271715026452354106589,
            10259309375944676280898476933131700711905221420031127160003376583581132419306
        );                                      
        
        vk.IC[80] = Pairing.G1Point( 
            6600233391152527906990198157525288888494975136572588749813294410555154995790,
            1623830516710022985732655972135945689117784009843378735008729349297844874040
        );                                      
        
        vk.IC[81] = Pairing.G1Point( 
            3133070071318449670159494662092989626209301175661323453827797028343929925577,
            20668395069425826895868744912749803003562291542861806126052566869526372310617
        );                                      
        
        vk.IC[82] = Pairing.G1Point( 
            4134245496949580887936188390836730990807548526865295347777229092686586352140,
            256168214423117065465904479255614392795718816316945949543897789590883830886
        );                                      
        
        vk.IC[83] = Pairing.G1Point( 
            2225918833911504651219471934935862244232449790257697079101348162533469992361,
            17548387340524423406042647337527418255306731803800720276928775569769199116127
        );                                      
        
        vk.IC[84] = Pairing.G1Point( 
            18285064481870447767312639666819890270765734267216572312547726783523163012163,
            19764181035871377102510504869277959063692396211979699979949206383699431451334
        );                                      
        
        vk.IC[85] = Pairing.G1Point( 
            10482700481074217186429865891471358815641213597081986877467912303051255343728,
            7386783438794901093042905536668796013206923575505576220808716179507995145540
        );                                      
        
        vk.IC[86] = Pairing.G1Point( 
            4191299382558876659839606873451586245933240449915975109770539830752449770717,
            10239603999300037621850747188097307398010984526783478421598084458406167351054
        );                                      
        
        vk.IC[87] = Pairing.G1Point( 
            8151281305951447391103892965821962690949370103935859831937833300602862969508,
            15583391693513915651146141152324713071183109422544186853493172224007857043133
        );                                      
        
        vk.IC[88] = Pairing.G1Point( 
            7028408679317453732734688826985503517897814823972815434983883368171741700695,
            11064679933022404278984668272309599103697018571071870551684142432519655601366
        );                                      
        
        vk.IC[89] = Pairing.G1Point( 
            5425593872725398223029943441226060709290512352338606561918045400608350083605,
            4351215960535952435259636167902951715604104844331830017771988094864679832654
        );                                      
        
        vk.IC[90] = Pairing.G1Point( 
            12697660671070950361808255652154729755131421282241245867339617012899008614033,
            1901626324276605253251956170670027528811816087545263171688658776940244848486
        );                                      
        
        vk.IC[91] = Pairing.G1Point( 
            518264900691473891378378241301079580113026250463402234534992778050872943992,
            20788093901439236179859666095490556931510269990526561235365852934933693757067
        );                                      
        
        vk.IC[92] = Pairing.G1Point( 
            386883875487308958086014230891514467137072861221139881171139486802625454318,
            3138921521768749025436642937428258665761546964509736598628341598331464107660
        );                                      
        
        vk.IC[93] = Pairing.G1Point( 
            1450775286203537747043597119934442321643319230417751153912177250278502734088,
            14024982687129512200507512740118625056280459736818376391033212177306439737098
        );                                      
        
        vk.IC[94] = Pairing.G1Point( 
            10503905891984159063410725697533160461024252762755110846920390027929664565131,
            17481248493747691109921988681071774550589438566184361284057605869638726318878
        );                                      
        
        vk.IC[95] = Pairing.G1Point( 
            10904722050787526092028285262386601331725361022155428496985796067079852229372,
            2943194696792547911364312763280844197419621529285705150493988502021618769738
        );                                      
        
        vk.IC[96] = Pairing.G1Point( 
            19215708018396436654074393009045817339169971500033317825482447613356344226758,
            19112961952759909278729938419944918084798490521240079858875634574818291969672
        );                                      
        
        vk.IC[97] = Pairing.G1Point( 
            5806088035753677375963209619569209310950039918381728110172474313343885559643,
            1041461988886289920152286520258935879675947598050487863801399322986071472226
        );                                      
        
        vk.IC[98] = Pairing.G1Point( 
            1491952560492220691154285089610791933447268205990118774709004012954405640183,
            570280998849034486309516436794771193933041940946583174380657846573503148758
        );                                      
        
        vk.IC[99] = Pairing.G1Point( 
            4503402623218857771299855284147653002302019648902568478695815037851896799397,
            7482116817682552319288967594631430539622534382981850329513194301628454567784
        );                                      
        
        vk.IC[100] = Pairing.G1Point( 
            5485084938353060734913464336741349640461479014347281009065267795624214099427,
            19787141448763038992283202534070473554405420684418142829463199724088757137924
        );                                      
        
        vk.IC[101] = Pairing.G1Point( 
            5495040389296866324327235876442782823783508925923836735928076421146061530183,
            10928955148122614425110425258524699362615215890060591271796095257845147641305
        );                                      
        
        vk.IC[102] = Pairing.G1Point( 
            13452897204860479018537029697538125246768451187204596963582273504152301961824,
            20705985124768206726876774201386167734219936267174661690203214447073676417671
        );                                      
        
        vk.IC[103] = Pairing.G1Point( 
            21691026219388900409686659751368343243570099408119507074887546693371730741249,
            9006704519800616854178676624232862566618446702308375258468815526351542719724
        );                                      
        
        vk.IC[104] = Pairing.G1Point( 
            11845827002862450575358794694290708919151215308968545078803466280386936748537,
            2179367423993352943451150853086599385134038542195966042004512976425090053702
        );                                      
        
        vk.IC[105] = Pairing.G1Point( 
            21682771081151701154796359542107818637125439858458699625601000059371180719004,
            5466146128823549388924774226568668749216082565987633299533832665193145462754
        );                                      
        
        vk.IC[106] = Pairing.G1Point( 
            12136637091161472426795864366357939740819726124093470009591129639319786607814,
            18015867351722352930458814232233043525622208116884571094378155194553269951693
        );                                      
        
        vk.IC[107] = Pairing.G1Point( 
            12673221043832572378072527547232401296190524116579140818983331897294899076774,
            4601652948204378748656665903144080507745298181864576591999232733291107247396
        );                                      
        
        vk.IC[108] = Pairing.G1Point( 
            18073141294969361528510059803216336095474822796558514293917066238858977810829,
            14558272203899434981870404949330179666555341769990746727630513683048968318988
        );                                      
        
        vk.IC[109] = Pairing.G1Point( 
            5348834498490383597250867265863372366673386466936088279051473597459109624477,
            13422842884429754265979232463457537926083136604339679234433347489724532950536
        );                                      
        
        vk.IC[110] = Pairing.G1Point( 
            5431251118738390604393599507599303071043050292055065317586583098703996609441,
            8215741404380678741214341422279065447174417141447903475677286730080913994445
        );                                      
        
        vk.IC[111] = Pairing.G1Point( 
            12710173513048676682672508234469602501919791509818176506471026391319791380609,
            18332104557187442317495020245648939576225600192172411406449529581582549013122
        );                                      
        
        vk.IC[112] = Pairing.G1Point( 
            16776949414241609406527240611443534651935615683861334238489074360227728226566,
            19133933409740069392923900846668822460720269327464605009567178968618665295444
        );                                      
        
        vk.IC[113] = Pairing.G1Point( 
            20336498625542912258702274943901068454965390178478397283704014850150471822518,
            10488219249456555031944378988444244295485730917114345113285136573886545423344
        );                                      
        
        vk.IC[114] = Pairing.G1Point( 
            17123226132849687849765826595212913242040211298260661609804759708356910950782,
            1900632691465412288227451057080922966212540509577100219616556435473415626108
        );                                      
        
        vk.IC[115] = Pairing.G1Point( 
            5970091409008761155994717727557082046996926884131856320735440191070162314616,
            13131201260864126490156061858974862867425282459669908554682984191358643589670
        );                                      
        
        vk.IC[116] = Pairing.G1Point( 
            5636598594576906151402919598137581698100306930062536748838907127589019870004,
            141324405715308059956159446055003470391941285429350053207231641291025984156
        );                                      
        
        vk.IC[117] = Pairing.G1Point( 
            4606275778950510979776209055800671822579420957149286099133927914028264376186,
            18123818892331898704405504841061799879483899137065110714171681657693505869752
        );                                      
        
        vk.IC[118] = Pairing.G1Point( 
            15007382022903835525922971089628225857622963261256901591364159946467641655648,
            15706941439291404235848631598894185320597286432847422980715147117010884186010
        );                                      
        
        vk.IC[119] = Pairing.G1Point( 
            14838272049659183319541433217040888537277928838076727477535360540415966008616,
            21438593864371187292857170880232737014378493329703310637026106701024406672062
        );                                      
        
        vk.IC[120] = Pairing.G1Point( 
            15022839109634181727010805418094178333831120304267088043213693071557181469248,
            8451344216519272521042053995820358145708218199017571962354527871301874357267
        );                                      
        
        vk.IC[121] = Pairing.G1Point( 
            3092523502397787626324171561106065740409377195191312044380911753083971673584,
            9669293499432315667962443806254069894125640897998148867515748522256353749504
        );                                      
        
        vk.IC[122] = Pairing.G1Point( 
            9748305228337700248658497596437748363543168755028055203878943843516237087636,
            1424720260561554972909652741771520325089488485472523217803176305490147635979
        );                                      
        
        vk.IC[123] = Pairing.G1Point( 
            6352471222243474056924708356485349312643458716233627326506681721222287438128,
            3070517599955839371938211425847194076753926208489750810042237183370541272253
        );                                      
        
        vk.IC[124] = Pairing.G1Point( 
            8638224215182109546157300858612233220711145207727280668487369502735050906354,
            19999715637825639431267966913901575196897862114313881896625577498132468117351
        );                                      
        
        vk.IC[125] = Pairing.G1Point( 
            5335082455159065466314317630360477125973128730071115819846021860016492461309,
            18891281317024316870079753694272610957794642319698594327369980591081406555625
        );                                      
        
        vk.IC[126] = Pairing.G1Point( 
            7892507126379590074104326560811859033300469941169253549387549755821708671010,
            20688076164369471235091728746381191477000092541327627926162945406922345307620
        );                                      
        
        vk.IC[127] = Pairing.G1Point( 
            14103175722010639384741733613100823977905419754236816574388463126304421667968,
            19453663841512938979179681482596842787416086241555026248587287176741667876466
        );                                      
        
        vk.IC[128] = Pairing.G1Point( 
            8812673581579153168811704001850378053141351767148910979873835982090317910484,
            6053871278680051645458273521561872475320898362213300684284486924090660321711
        );                                      
        
        vk.IC[129] = Pairing.G1Point( 
            13485598651958544325444322282801455471499614762458723561854406528780845640175,
            16044646745708872084667235327100190672644078177343334117463568182499721716961
        );                                      
        
        vk.IC[130] = Pairing.G1Point( 
            10525281304189369461442302540508802544295685096272582919970100232764091343320,
            19091181401746657436623525366086553877576016851106790071791782706873445386388
        );                                      
        
        vk.IC[131] = Pairing.G1Point( 
            11413918569885932595570065392373132316390338192838036472884452231774496229951,
            2533177720936484375314552875165811117372264462376396629105589609089419899347
        );                                      
        
    }
    function verify(uint[] memory input, Proof memory proof) internal view returns (uint) {
        uint256 snark_scalar_field = 21888242871839275222246405745257275088548364400416034343698204186575808495617;
        VerifyingKey memory vk = verifyingKey();
        require(input.length + 1 == vk.IC.length,"verifier-bad-input");
        // Compute the linear combination vk_x
        Pairing.G1Point memory vk_x = Pairing.G1Point(0, 0);
        for (uint i = 0; i < input.length; i++) {
            require(input[i] < snark_scalar_field,"verifier-gte-snark-scalar-field");
            vk_x = Pairing.addition(vk_x, Pairing.scalar_mul(vk.IC[i + 1], input[i]));
        }
        vk_x = Pairing.addition(vk_x, vk.IC[0]);
        if (!Pairing.pairingProd4(
            Pairing.negate(proof.A), proof.B,
            vk.alfa1, vk.beta2,
            vk_x, vk.gamma2,
            proof.C, vk.delta2
        )) return 1;
        return 0;
    }
    /// @return r  bool true if proof is valid
    function verifyProof(
            uint[2] memory a,
            uint[2][2] memory b,
            uint[2] memory c,
            uint[131] memory input
        ) public view returns (bool r) {
        Proof memory proof;
        proof.A = Pairing.G1Point(a[0], a[1]);
        proof.B = Pairing.G2Point([b[0][0], b[0][1]], [b[1][0], b[1][1]]);
        proof.C = Pairing.G1Point(c[0], c[1]);
        uint[] memory inputValues = new uint[](input.length);
        for(uint i = 0; i < input.length; i++){
            inputValues[i] = input[i];
        }
        if (verify(inputValues, proof) == 0) {
            return true;
        } else {
            return false;
        }
    }
}
